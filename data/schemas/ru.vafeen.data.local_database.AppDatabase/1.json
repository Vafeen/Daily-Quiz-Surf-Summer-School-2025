{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "1a014b8f883c7e58153f50f956fa2945",
    "entities": [
      {
        "tableName": "quiz_sessions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`sessionId` INTEGER NOT NULL, `dateTime` INTEGER NOT NULL, `name` TEXT NOT NULL, `countOfRightAnswers` INTEGER NOT NULL, PRIMARY KEY(`sessionId`))",
        "fields": [
          {
            "fieldPath": "sessionId",
            "columnName": "sessionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateTime",
            "columnName": "dateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "countOfRightAnswers",
            "columnName": "countOfRightAnswers",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "sessionId"
          ]
        }
      },
      {
        "tableName": "quiz_question_results",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `sessionId` INTEGER NOT NULL, `question` TEXT NOT NULL, `category` TEXT NOT NULL, `difficulty` TEXT NOT NULL, `correctAnswer` TEXT NOT NULL, `allAnswers` TEXT NOT NULL, `chosenAnswer` TEXT NOT NULL, FOREIGN KEY(`sessionId`) REFERENCES `quiz_sessions`(`sessionId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sessionId",
            "columnName": "sessionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "question",
            "columnName": "question",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "difficulty",
            "columnName": "difficulty",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "correctAnswer",
            "columnName": "correctAnswer",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "allAnswers",
            "columnName": "allAnswers",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "chosenAnswer",
            "columnName": "chosenAnswer",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_quiz_question_results_sessionId",
            "unique": false,
            "columnNames": [
              "sessionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_quiz_question_results_sessionId` ON `${TABLE_NAME}` (`sessionId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "quiz_sessions",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "sessionId"
            ],
            "referencedColumns": [
              "sessionId"
            ]
          }
        ]
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '1a014b8f883c7e58153f50f956fa2945')"
    ]
  }
}